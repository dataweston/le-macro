export type Inputs = {
  T: number;
  rampMonths: number;
  seasonality: number[];
  R1: number;
  g: number;
  eventsAnnual: number;
  eventsRampMonths: number;
  subsMode: "mechanistic" | "manual";
  subsInit: number;
  subsSpendM: number;
  CAC: number;
  churnM: number;
  pauseRate: number;
  manualSubsCounts?: number[];
  subsPriceW: number;
  weeksPerMonth: number;
  cogsPct: number;
  packagingPct: number;
  wastePct: number;
  varLaborPct: number;
  procFeesPct: number;
  cardMixPct: number;
  fixedSalariesAnnual: number;
  insuranceM: number;
  licensesM: number;
  utilitiesM: number;
  linenM: number;
  repairsM: number;
  baseRentM: number;
  nnnM: number;
  esc: number;
  holidayM: number;
  loanAmt: number;
  rateAPR: number;
  termMonths: number;
  ioMonths: number;
  dscrGate: number;
  salesTaxRate: number;
  entityTaxRate: number;
  ARdays: number;
  APdays: number;
  InvDays: number;
  startingCash: number;
  minCash: number;
  payout: number;
  assetsF: number;
  PM: number;
  exitMult: number;
  ebitdaMultiple: number;
  capacityCap?: number;
};

export type MonthRow = {
  m: number;
  core: number;
  events: number;
  subs: number;
  revenue: number;
  cogs: number;
  varLabor: number;
  procFees: number;
  grossProfit: number;
  contribution: number;
  fixedLaborM: number;
  overheadM: number;
  occupancy: number;
  EBITDA: number;
  interest: number;
  principal: number;
  preTax: number;
  incomeTax: number;
  salesTax: number;
  deltaNWC: number;
  OCF: number;
  debtService: number;
  DSCR: number | typeof Infinity;
  distTotal: number;
  distF: number;
  distK: number;
  cash: number;
};

export type YearRow = {
  year: number;
  revenue: number;
  EBITDA: number;
  preTax: number;
  distributions: number;
  cash: number;
};

export type Model = {
  eq_F: number;
  eq_K: number;
  in_kind_F: number;
  rows: MonthRow[];
  yearly: YearRow[];
  exitValue: number;
  exitF: number;
  exitK: number;
  IRR_annual: number | null;
  valueEBITDA: number;
  heuristicValue: number;
};
